
services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: bank
      POSTGRES_PASSWORD: bank
      POSTGRES_DB: bank
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
  redpanda:
    image: redpandadata/redpanda:latest
    command: |
      redpanda start --overprovisioned --smp 1 --memory 1G --reserve-memory 0M --node-id 0 --check=false
    ports:
      - "9092:9092"
  redis:
    image: redis:7
    ports:
      - "6379:6379"
  bank_connector:
    build:
      context: .
      dockerfile: bank_connector/Dockerfile
    depends_on:
      - postgres
    environment:
      DATABASE_URL: postgresql://bank:bank@postgres:5432/bank
    ports:

      - "8003:8080"
    command: uvicorn bank_connector.main:app --host 0.0.0.0 --port 8080
  treasury_orchestrator:
    build:
      context: .
      dockerfile: asset_aggregator/Dockerfile
    depends_on:
      - postgres
      - redpanda
    environment:
      ASSET_DB_URL: postgresql://bank:bank@postgres:5432/bank
      KAFKA_BOOTSTRAP: redpanda:9092
    ports:
      - "9000:8000"
      - "8002:8001"
    command: uvicorn asset_aggregator.api:app --host 0.0.0.0 --port 8000
  quant_consumer:
    build:
      context: .
      dockerfile: quantengine/Dockerfile
    depends_on:
      - redpanda
      - redis
    environment:
      REDIS_URL: redis://redis:6379/0
    command: python -m quantengine.kafka_consumer redpanda:9092
  prometheus:
    image: prom/prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "8001:9090"
  grafana:
    image: grafana/grafana
    ports:
      - "3000:3000"
    environment:
      GF_AUTH_ANONYMOUS_ENABLED: "true"
    volumes:
      - ./grafana/dashboards:/var/lib/grafana/dashboards
      - ./grafana/provisioning:/etc/grafana/provisioning
volumes:
  pgdata:
