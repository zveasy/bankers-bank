name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test-go:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set up Go
        uses: actions/setup-go@v5
        with: { go-version: '1.22' }
      - run: go test ./...
      - name: Build Docker images
        run: |
          docker build -t ledger ./services/ledger
          # repeat for other services

  test-python:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: latest
        virtualenvs-create: true
        virtualenvs-in-project: true
    
    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ steps.setup-python.outputs.python-version }}-${{ hashFiles('**/poetry.lock') }}
    
    - name: Install dependencies
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: poetry install --no-interaction --no-root
    
    - name: Install project
      run: poetry install --no-interaction
    
    - name: Run pytest
      run: poetry run pytest
    
    - name: Set up Node.js for AJV
      uses: actions/setup-node@v4
      with:
        node-version: '18'
    
    - name: Install AJV CLI
      run: npm install -g ajv-cli
    
    - name: Generate test data for schema validation
      run: |
        poetry run python -c "
        from treasury_orchestrator.cli import main
        import sys
        sys.argv = ['cli.py', '100000.00']
        main()
        " > test_output.json
    
    - name: Validate JSON schema
      run: npx ajv validate -s schemas/sweep_order.schema.json -d test_output.json
    
    - name: Run linting
      run: |
        poetry run black --check .
        poetry run isort --check-only .
    
    - name: Run type checking
      run: poetry run mypy treasury_orchestrator

          